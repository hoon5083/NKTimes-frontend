name: build_test

on:
  pull_request:
    branches: [develop]

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [16.17.0]

    steps:
      - name: Checkout source code.
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check Yarn -v
        run: yarn -v

      - name: create env file
        working-directory: ./
        run: |
          pwd
          touch .env
          echo NEXT_PUBLIC_GOOGLE_CLIENT_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }} >> .env
          echo GOOGLE_SECRET=${{ secrets.GOOGLE_SECRET }} >> .env
          echo NEXT_PUBLIC_APP_DOMAIN=${{ secrets.NEXT_PUBLIC_APP_DOMAIN }} >> .env
          echo NEXT_PUBLIC_ENDPOINT=${{ secrets.NEXT_PUBLIC_ENDPOINT }} >> .env
          echo NEXT_PUBLIC_LUNCH_KEY=${{ secrets.NEXT_PUBLIC_LUNCH_KEY }} >> .env
          cat .env

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: get cache directory path
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
          ${{ runner.os }}-yarn-

      - name: build server files
        working-directory: ./
        run: |
          yarn
          yarn build
          ls -al ./public/
          ls -al ./.next/cache/
